{"version":3,"file":"component---src-templates-blog-post-js-e58608e0d72719d69ba4.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            linkedin\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong>\n          &nbsp;&nbsp;\n          <a href={`https://${social?.linkedin || ``}`}>\n            LinkedIn\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","Date","getFullYear","href","Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","name","linkedin","Head","_ref2","markdownRemark","post","Seo","frontmatter","description","excerpt","_site$siteMetadata","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","_site$siteMetadata2","_site$siteMetadata2$s","metaDescription","defaultTitle","content","property","twitter"],"sourceRoot":""}