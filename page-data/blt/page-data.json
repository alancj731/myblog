{"componentChunkName":"component---src-templates-blog-post-js","path":"/blt/","result":{"data":{"site":{"siteMetadata":{"title":"The Matrix"}},"markdownRemark":{"id":"dac157a0-37ca-5364-8eac-30041762b4ff","excerpt":"Make sure you are using Python 3.9-3.13 and have pip installed Install uv and reate virtual enviroment Install dlt Setup the secrets.toml file: edit and set theâ€¦","html":"<h2>Make sure you are using Python 3.9-3.13 and have pip installed</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python <span class=\"token parameter variable\">--version</span>\npip <span class=\"token parameter variable\">--version</span></code></pre></div>\n<h2>Install uv and reate virtual enviroment</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># first navigate to your project folder </span>\npip <span class=\"token function\">install</span> uv\nuv venv\n<span class=\"token builtin class-name\">source</span> .venv/bin/activate\n<span class=\"token comment\"># now you are in your virtual enviroment, enter deactivate to exit</span></code></pre></div>\n<h2>Install dlt</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">uv pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-U</span> dlt <span class=\"token string\">\"dlt[postgres]\"</span>\n<span class=\"token comment\"># use dlt to create template for loading data from one sql database(source) to a postgres(destination) database</span>\ndlt init sql_database postgres <span class=\"token parameter variable\">--eject</span>\n<span class=\"token comment\"># install required packages for the template</span>\nuv pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> requirements.txt\n<span class=\"token comment\"># install psycopg2</span>\nuv pip <span class=\"token function\">install</span> psycopg2</code></pre></div>\n<h1>Setup the secrets.toml file:</h1>\n<p>edit and set the required value in .dlt/secrets.toml file, below shows an example</p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">sources.sql_database.credentials</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">drivername</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"postgresql+psycopg2\"</span> <span class=\"token comment\">#</span>\n<span class=\"token key property\">database</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"sourcedatabasename\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">password</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"postgres\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">username</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"postgres\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">host</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"xxx.us-west-2.elb.amazonaws.com\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5432</span> <span class=\"token comment\"># fill this in!</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">destination.postgres.credentials</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">database</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"destdatabasename\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">password</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"postgres\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">username</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"postgres\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">host</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5432</span> <span class=\"token comment\"># fill this in!</span>\n<span class=\"token key property\">connect_timeout</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">15</span></code></pre></div>\n<h2>customize sql_database_pipeline.py</h2>\n<p>The example pipeline copy a \"tags\" table from source db to destination db</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\">#...</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">load_select_tables_from_database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Use the sql_database source to reflect an entire database schema and load select tables from it.\n    \"\"\"</span>\n    <span class=\"token comment\"># Create a pipeline, data loaded will go into a new schema called \"rfam_data\"</span>\n    pipeline <span class=\"token operator\">=</span> dlt<span class=\"token punctuation\">.</span>pipeline<span class=\"token punctuation\">(</span>pipeline_name<span class=\"token operator\">=</span><span class=\"token string\">\"rfam\"</span><span class=\"token punctuation\">,</span> destination<span class=\"token operator\">=</span><span class=\"token string\">'postgres'</span><span class=\"token punctuation\">,</span> dataset_name<span class=\"token operator\">=</span><span class=\"token string\">\"rfam_data\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Configure the source to load a few select tables incrementally</span>\n    credentials <span class=\"token operator\">=</span> dlt<span class=\"token punctuation\">.</span>secrets<span class=\"token punctuation\">[</span><span class=\"token string\">\"sources\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"sql_database\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"credentials\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># load settings from .dlt/secrets.toml </span>\n    source_1 <span class=\"token operator\">=</span> sql_database<span class=\"token punctuation\">(</span>credentials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>with_resources<span class=\"token punctuation\">(</span><span class=\"token string\">\"tags\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Run the pipeline. The merge write disposition merges existing rows in the destination by primary key</span>\n    info <span class=\"token operator\">=</span> pipeline<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>source_1<span class=\"token punctuation\">,</span> write_disposition<span class=\"token operator\">=</span><span class=\"token string\">\"merge\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#...</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Load selected tables with different settings</span>\n    load_select_tables_from_database<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Run the pipeline</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> python sql_database_pipeline.py</code></pre></div>\n<h2>Check the complete project: <a href=\"https://github.com/alancj731/dltdemo\">repo</a></h2>","frontmatter":{"title":"How to use blt to migrate data","date":"May 26, 2025","description":"A basic demo for copying a table from a source database to a destination database."}},"previous":{"fields":{"slug":"/airflow/"},"frontmatter":{"title":"How to install airflow"}},"next":null},"pageContext":{"id":"dac157a0-37ca-5364-8eac-30041762b4ff","previousPostId":"f1a76c03-ce49-5233-abe3-53ba6ff8f62e","nextPostId":null}},"staticQueryHashes":["2841359383","4135132960"],"slicesMap":{}}